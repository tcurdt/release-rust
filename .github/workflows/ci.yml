name: CI

env:
  project: 'release-rust'

on: [push, pull_request]

jobs:

  test:
    strategy:
      matrix:
        # rustup target list
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
        # - name: linux-x86_64-gnu
        #   os: ubuntu-latest
        #   target: x86_64-unknown-linux-gnu
        # - name: linux-armv7-gnu
        #   os: ubuntu-latest
        #   target: armv7-unknown-linux-gnueabihf
        # - name: macos-x86_64
        #   os: macos-latest
        #   target: x86_64-apple-darwin
        # - name: windows-x86_64-msvc
        #   os: windows-latest
        #   target: x86_64-pc-windows-msvc
        # - name: windows-x86_64-gnu
        #   os: windows-latest
        #   target: x86_64-pc-windows-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Cache Rustup
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup/settings.toml
            ~/.rustup/toolchains/${{ matrix.target }}-*
            ~/.rustup/update-hashes/${{ matrix.target }}-*
          key: run-toolchain-rust_${{ matrix.target }}
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
