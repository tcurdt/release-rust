name: ci

on: [ push, pull_request ]

env:
  project: 'release-rust'

jobs:

  test:
    strategy:
      matrix:
        # rustup target list
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Version
        uses: tcurdt/action-verify-version-cargo@master

      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Cache Rustup
        uses: actions/cache@v3
        with:
          path: |
            ~/.rustup/settings.toml
            ~/.rustup/toolchains/${{ matrix.target }}-*
            ~/.rustup/update-hashes/${{ matrix.target }}-*
          key: run-toolchain-rust_${{ matrix.target }}

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test

      - name: Upload
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.project }}_${{ matrix.target }}
          path: |
            ./target/${{ matrix.target }}/release/${{ env.project }}
            ./target/${{ matrix.target }}/release/${{ env.project }}.exe

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:

      - name: Download
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Archives
        run: find artifacts -mindepth 1 -maxdepth 1  -exec tar -C {} -cvzf {}.tgz . \;

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
