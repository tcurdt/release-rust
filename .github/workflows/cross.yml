name: Building

env:
  project: 'release-rust'

on:
  push:
    branches: master

jobs:
  # linux:
  # windows:
  # macos:
  build:
    name: Target ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # rustup target list
        include:
        - name: linux-x86_64-gnu
          os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        # - name: linux-armv7-gnu
        #   os: ubuntu-latest
        #   target: armv7-unknown-linux-gnueabihf
        # - name: macos-x86_64
        #   os: macos-latest
        #   target: x86_64-apple-darwin
        # - name: windows-x86_64-msvc
        #   os: windows-latest
        #   target: x86_64-pc-windows-msvc
        # - name: windows-x86_64-gnu
        #   os: windows-latest
        #   target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     profile: minimal
      #     toolchain: stable
      #     target: ${{ matrix.target }}
      #     override: true

      # - name: Cache Toolchain
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.rustup/settings.toml
      #       ~/.rustup/toolchains/${{ matrix.rust }}-*
      #       ~/.rustup/update-hashes/${{ matrix.rust }}-*
      #     key: run-toolchain-rust_${{ matrix.rust }}

      # - name: Build
      #   uses: actions-rs/cargo@v1
      #   with:
      #     use-cross: true
      #     command: build
      #     args: --release --target=${{ matrix.target }}

      # - name: Cache Build
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cargo/registry
      #       ~/.cargo/git
      #       target
      #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # - name: Archive
      #   run: tar czvf target/${{ env.project }}-${{ matrix.name }}.tgz -C target/${{ matrix.target }}/release ${{ env.project }}

      # - name: Show
      #   run: find target

      # - name: Docker registry login
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Docker build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: user/app:latest

      # - name: Docker digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}

      # - name: Upload binaries to release
      #   uses: svenstaro/upload-release-action@v1-release
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: target/${{ matrix.target }}/release/${{ env.project }}
      #     asset_name: ${{ env.project }}-${{ matrix.name }}
      #     tag: ${{ github.ref }}
